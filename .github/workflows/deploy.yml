name: Deploy with Github Actions to an instance EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Download project from S3
      run: |
        aws s3 cp s3://my-reallife/mywebapp.zip ./project.zip

    - name: Unzip project
      run: |
        unzip project.zip -d ./project

    - name: Check if there is an active deployment
      id: check_deployment
      run: |
        ACTIVE_DEPLOYMENT=$(aws deploy list-deployments --application-name production --deployment-group-name mydg --query "deployments[0]" --output text)
        echo "Active deployment ID: $ACTIVE_DEPLOYMENT"
        if [ "$ACTIVE_DEPLOYMENT" != "None" ] && [ "$ACTIVE_DEPLOYMENT" != "" ]; then
          echo "There is already an active deployment with ID $ACTIVE_DEPLOYMENT."
          echo "Active Deployment ID=$ACTIVE_DEPLOYMENT" >> $GITHUB_ENV
        else
          echo "No active deployments found."
        fi

    - name: Wait for active deployment to finish (if any)
      if: env.ACTIVE_DEPLOYMENT != 'None' && env.ACTIVE_DEPLOYMENT != ''
      run: |
        echo "Waiting for active deployment $ACTIVE_DEPLOYMENT to finish..."
        aws deploy wait deployment-successful --deployment-id $ACTIVE_DEPLOYMENT
        echo "Deployment $ACTIVE_DEPLOYMENT is complete."

    - name: Delete previous project from S3
      run: |
        echo "Deleting previous project from S3..."
        aws s3 rm s3://my-reallife/mywebapp.zip

    - name: Upload new project to S3
      run: |
        echo "Uploading new project to S3..."
        aws s3 cp ./project.zip s3://my-reallife/mywebapp.zip

    - name: Deploy using AWS CodeDeploy
      run: |
        aws deploy create-deployment \
          --application-name production \
          --deployment-group-name mydg \
          --s3-location bucket=my-reallife,key=mywebapp.zip,bundleType=zip

    - name: Check deployment status
      run: |
        DEPLOYMENT_ID=$(aws deploy list-deployments --application-name production --deployment-group-name mydg --query "deployments[0]" --output text)
        aws deploy get-deployment --deployment-id $DEPLOYMENT_ID
